|uart
CLOCK_50 => debouncer:debouncer_key0.CLOCK_50
CLOCK_50 => LEDG[0]~reg0.CLK
CLOCK_50 => LEDG[1]~reg0.CLK
CLOCK_50 => start.CLK
CLOCK_50 => reset.CLK
CLOCK_50 => debouncer:debouncer_key1.CLOCK_50
CLOCK_50 => uart_tx:uart_instance.clk
KEY[0] => debouncer:debouncer_key0.btn
KEY[1] => debouncer:debouncer_key1.btn
KEY[2] => ~NO_FANOUT~
KEY[3] => debouncer:debouncer_key0.rst
KEY[3] => debouncer:debouncer_key1.rst
SW[0] => uart_tx:uart_instance.data[0]
SW[1] => uart_tx:uart_instance.data[1]
SW[2] => uart_tx:uart_instance.data[2]
SW[3] => uart_tx:uart_instance.data[3]
SW[4] => uart_tx:uart_instance.data[4]
SW[5] => uart_tx:uart_instance.data[5]
SW[6] => uart_tx:uart_instance.data[6]
SW[7] => uart_tx:uart_instance.data[7]
LEDG[0] << LEDG[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDG[1] << LEDG[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDG[2] << <GND>
LEDG[3] << <GND>
LEDG[4] << <GND>
LEDG[5] << <GND>
LEDG[6] << <GND>
LEDG[7] << <GND>
UART_TXD << uart_tx:uart_instance.rs232_tx
done << uart_tx:uart_instance.done


|uart|debouncer:debouncer_key0
btn => process_0.IN1
rst => wait_count[0].ACLR
rst => wait_count[1].ACLR
rst => wait_count[2].ACLR
rst => wait_count[3].ACLR
rst => wait_count[4].ACLR
rst => wait_count[5].ACLR
rst => wait_count[6].ACLR
rst => wait_count[7].ACLR
rst => wait_count[8].ACLR
rst => wait_count[9].ACLR
rst => wait_count[10].ACLR
rst => wait_count[11].ACLR
rst => wait_count[12].ACLR
rst => wait_count[13].ACLR
rst => wait_count[14].ACLR
rst => wait_count[15].ACLR
rst => wait_count[16].ACLR
rst => wait_count[17].ACLR
rst => wait_count[18].ACLR
rst => slow_clk.PRESET
CLOCK_50 => wait_count[0].CLK
CLOCK_50 => wait_count[1].CLK
CLOCK_50 => wait_count[2].CLK
CLOCK_50 => wait_count[3].CLK
CLOCK_50 => wait_count[4].CLK
CLOCK_50 => wait_count[5].CLK
CLOCK_50 => wait_count[6].CLK
CLOCK_50 => wait_count[7].CLK
CLOCK_50 => wait_count[8].CLK
CLOCK_50 => wait_count[9].CLK
CLOCK_50 => wait_count[10].CLK
CLOCK_50 => wait_count[11].CLK
CLOCK_50 => wait_count[12].CLK
CLOCK_50 => wait_count[13].CLK
CLOCK_50 => wait_count[14].CLK
CLOCK_50 => wait_count[15].CLK
CLOCK_50 => wait_count[16].CLK
CLOCK_50 => wait_count[17].CLK
CLOCK_50 => wait_count[18].CLK
CLOCK_50 => slow_clk.CLK
btn_clock <= slow_clk.DB_MAX_OUTPUT_PORT_TYPE


|uart|debouncer:debouncer_key1
btn => process_0.IN1
rst => wait_count[0].ACLR
rst => wait_count[1].ACLR
rst => wait_count[2].ACLR
rst => wait_count[3].ACLR
rst => wait_count[4].ACLR
rst => wait_count[5].ACLR
rst => wait_count[6].ACLR
rst => wait_count[7].ACLR
rst => wait_count[8].ACLR
rst => wait_count[9].ACLR
rst => wait_count[10].ACLR
rst => wait_count[11].ACLR
rst => wait_count[12].ACLR
rst => wait_count[13].ACLR
rst => wait_count[14].ACLR
rst => wait_count[15].ACLR
rst => wait_count[16].ACLR
rst => wait_count[17].ACLR
rst => wait_count[18].ACLR
rst => slow_clk.PRESET
CLOCK_50 => wait_count[0].CLK
CLOCK_50 => wait_count[1].CLK
CLOCK_50 => wait_count[2].CLK
CLOCK_50 => wait_count[3].CLK
CLOCK_50 => wait_count[4].CLK
CLOCK_50 => wait_count[5].CLK
CLOCK_50 => wait_count[6].CLK
CLOCK_50 => wait_count[7].CLK
CLOCK_50 => wait_count[8].CLK
CLOCK_50 => wait_count[9].CLK
CLOCK_50 => wait_count[10].CLK
CLOCK_50 => wait_count[11].CLK
CLOCK_50 => wait_count[12].CLK
CLOCK_50 => wait_count[13].CLK
CLOCK_50 => wait_count[14].CLK
CLOCK_50 => wait_count[15].CLK
CLOCK_50 => wait_count[16].CLK
CLOCK_50 => wait_count[17].CLK
CLOCK_50 => wait_count[18].CLK
CLOCK_50 => slow_clk.CLK
btn_clock <= slow_clk.DB_MAX_OUTPUT_PORT_TYPE


|uart|uart_tx:uart_instance
clk => done_sig.CLK
clk => rs232_tx~reg0.CLK
clk => bit_cnt[0].CLK
clk => bit_cnt[1].CLK
clk => bit_cnt[2].CLK
clk => bit_cnt[3].CLK
clk => bit_cnt[4].CLK
clk => bit_cnt[5].CLK
clk => bit_cnt[6].CLK
clk => bit_cnt[7].CLK
clk => bit_cnt[8].CLK
clk => bit_cnt[9].CLK
clk => bit_cnt[10].CLK
clk => bit_cnt[11].CLK
clk => bit_cnt[12].CLK
clk => bit_cnt[13].CLK
clk => bit_cnt[14].CLK
clk => bit_cnt[15].CLK
clk => bit_cnt[16].CLK
clk => bit_cnt[17].CLK
clk => bit_cnt[18].CLK
clk => bit_cnt[19].CLK
clk => bit_cnt[20].CLK
clk => bit_cnt[21].CLK
clk => bit_cnt[22].CLK
clk => bit_cnt[23].CLK
clk => bit_cnt[24].CLK
clk => bit_cnt[25].CLK
clk => bit_cnt[26].CLK
clk => bit_cnt[27].CLK
clk => bit_cnt[28].CLK
clk => bit_cnt[29].CLK
clk => bit_cnt[30].CLK
clk => bit_cnt[31].CLK
clk => bit_flag.CLK
clk => baud_cnt[0].CLK
clk => baud_cnt[1].CLK
clk => baud_cnt[2].CLK
clk => baud_cnt[3].CLK
clk => baud_cnt[4].CLK
clk => baud_cnt[5].CLK
clk => baud_cnt[6].CLK
clk => baud_cnt[7].CLK
clk => baud_cnt[8].CLK
clk => baud_cnt[9].CLK
clk => baud_cnt[10].CLK
clk => baud_cnt[11].CLK
clk => baud_cnt[12].CLK
clk => baud_cnt[13].CLK
clk => baud_cnt[14].CLK
clk => baud_cnt[15].CLK
clk => baud_cnt[16].CLK
clk => baud_cnt[17].CLK
clk => baud_cnt[18].CLK
clk => baud_cnt[19].CLK
clk => baud_cnt[20].CLK
clk => baud_cnt[21].CLK
clk => baud_cnt[22].CLK
clk => baud_cnt[23].CLK
clk => baud_cnt[24].CLK
clk => baud_cnt[25].CLK
clk => baud_cnt[26].CLK
clk => baud_cnt[27].CLK
clk => baud_cnt[28].CLK
clk => baud_cnt[29].CLK
clk => baud_cnt[30].CLK
clk => baud_cnt[31].CLK
clk => state.CLK
clk => r_data[0].CLK
clk => r_data[1].CLK
clk => r_data[2].CLK
clk => r_data[3].CLK
clk => r_data[4].CLK
clk => r_data[5].CLK
clk => r_data[6].CLK
clk => r_data[7].CLK
rst_n => baud_cnt[0].ACLR
rst_n => baud_cnt[1].ACLR
rst_n => baud_cnt[2].ACLR
rst_n => baud_cnt[3].ACLR
rst_n => baud_cnt[4].ACLR
rst_n => baud_cnt[5].ACLR
rst_n => baud_cnt[6].ACLR
rst_n => baud_cnt[7].ACLR
rst_n => baud_cnt[8].ACLR
rst_n => baud_cnt[9].ACLR
rst_n => baud_cnt[10].ACLR
rst_n => baud_cnt[11].ACLR
rst_n => baud_cnt[12].ACLR
rst_n => baud_cnt[13].ACLR
rst_n => baud_cnt[14].ACLR
rst_n => baud_cnt[15].ACLR
rst_n => baud_cnt[16].ACLR
rst_n => baud_cnt[17].ACLR
rst_n => baud_cnt[18].ACLR
rst_n => baud_cnt[19].ACLR
rst_n => baud_cnt[20].ACLR
rst_n => baud_cnt[21].ACLR
rst_n => baud_cnt[22].ACLR
rst_n => baud_cnt[23].ACLR
rst_n => baud_cnt[24].ACLR
rst_n => baud_cnt[25].ACLR
rst_n => baud_cnt[26].ACLR
rst_n => baud_cnt[27].ACLR
rst_n => baud_cnt[28].ACLR
rst_n => baud_cnt[29].ACLR
rst_n => baud_cnt[30].ACLR
rst_n => baud_cnt[31].ACLR
rst_n => r_data[0].ACLR
rst_n => r_data[1].ACLR
rst_n => r_data[2].ACLR
rst_n => r_data[3].ACLR
rst_n => r_data[4].ACLR
rst_n => r_data[5].ACLR
rst_n => r_data[6].ACLR
rst_n => r_data[7].ACLR
rst_n => rs232_tx~reg0.PRESET
rst_n => done_sig.ACLR
rst_n => state.ACLR
rst_n => bit_flag.ACLR
rst_n => bit_cnt[0].ACLR
rst_n => bit_cnt[1].ACLR
rst_n => bit_cnt[2].ACLR
rst_n => bit_cnt[3].ACLR
rst_n => bit_cnt[4].ACLR
rst_n => bit_cnt[5].ACLR
rst_n => bit_cnt[6].ACLR
rst_n => bit_cnt[7].ACLR
rst_n => bit_cnt[8].ACLR
rst_n => bit_cnt[9].ACLR
rst_n => bit_cnt[10].ACLR
rst_n => bit_cnt[11].ACLR
rst_n => bit_cnt[12].ACLR
rst_n => bit_cnt[13].ACLR
rst_n => bit_cnt[14].ACLR
rst_n => bit_cnt[15].ACLR
rst_n => bit_cnt[16].ACLR
rst_n => bit_cnt[17].ACLR
rst_n => bit_cnt[18].ACLR
rst_n => bit_cnt[19].ACLR
rst_n => bit_cnt[20].ACLR
rst_n => bit_cnt[21].ACLR
rst_n => bit_cnt[22].ACLR
rst_n => bit_cnt[23].ACLR
rst_n => bit_cnt[24].ACLR
rst_n => bit_cnt[25].ACLR
rst_n => bit_cnt[26].ACLR
rst_n => bit_cnt[27].ACLR
rst_n => bit_cnt[28].ACLR
rst_n => bit_cnt[29].ACLR
rst_n => bit_cnt[30].ACLR
rst_n => bit_cnt[31].ACLR
start => state.OUTPUTSELECT
start => r_data[7].ENA
start => r_data[6].ENA
start => r_data[5].ENA
start => r_data[4].ENA
start => r_data[3].ENA
start => r_data[2].ENA
start => r_data[1].ENA
start => r_data[0].ENA
data[0] => r_data[0].DATAIN
data[1] => r_data[1].DATAIN
data[2] => r_data[2].DATAIN
data[3] => r_data[3].DATAIN
data[4] => r_data[4].DATAIN
data[5] => r_data[5].DATAIN
data[6] => r_data[6].DATAIN
data[7] => r_data[7].DATAIN
rs232_tx <= rs232_tx~reg0.DB_MAX_OUTPUT_PORT_TYPE
done <= done_sig.DB_MAX_OUTPUT_PORT_TYPE


